Grammar

    0 $accept: start $end

    1 start: block

    2 block: '{' itemStarList '}'

    3 itemStarList: epsilon
    4             | itemPlusList semicolonOpt

    5 semicolonOpt: ';'
    6             | epsilon

    7 itemPlusList: item
    8             | itemPlusList ';' item

    9 item: declaration
   10     | ifStmt
   11     | readStmt
   12     | whileStmt
   13     | writeStmt
   14     | expr
   15     | breakStmt
   16     | continueStmt
   17     | forStmt

   18 declaration: tok_INTEGER tok_ID initOpt
   19            | tok_REAL tok_ID initOpt
   20            | tok_STRING tok_ID initOpt

   21 initOpt: epsilon
   22        | tok_ASSIGN expr

   23 ifStmt: tok_IF expr block elseOpt

   24 elseOpt: epsilon
   25        | tok_ELSE block

   26 readStmt: tok_READ exprList

   27 whileStmt: tok_WHILE expr block

   28 writeStmt: tok_WRITE exprList

   29 breakStmt: tok_BREAK

   30 continueStmt: tok_CONTINUE

   31 forStmt: tok_FOR tok_ID tok_ASSIGN expr toDownto expr stepOpt block

   32 stepOpt: epsilon
   33        | tok_BY expr

   34 toDownto: tok_TO
   35         | tok_DOWNTO

   36 expr: expr '+' expr
   37     | expr '/' expr
   38     | expr '^' expr
   39     | expr '*' expr
   40     | expr '-' expr
   41     | expr tok_ASSIGN expr
   42     | expr tok_EQ expr
   43     | expr tok_NE expr
   44     | '-' expr
   45     | '+' expr
   46     | tok_ID
   47     | tok_INT_LIT
   48     | tok_REAL_LIT
   49     | tok_STR_LIT
   50     | '(' expr ')'

   51 exprList: expr
   52         | exprList ',' expr

   53 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 50
')' (41) 50
'*' (42) 39
'+' (43) 36 45
',' (44) 52
'-' (45) 40 44
'/' (47) 37
';' (59) 5 8
'^' (94) 38
'{' (123) 2
'}' (125) 2
error (256)
tok_ASSIGN (258) 22 31 41
tok_BREAK (259) 29
tok_BY (260) 33
tok_CONTINUE (261) 30
tok_DOWNTO (262) 35
tok_ELSE (263) 25
tok_EQ (264) 42
tok_FOR (265) 31
tok_IF (266) 23
tok_INTEGER (267) 18
tok_NE (268) 43
tok_REAL (269) 19
tok_READ (270) 26
tok_STRING (271) 20
tok_TO (272) 34
tok_WHILE (273) 27
tok_WRITE (274) 28
tok_INT_LIT (275) 47
tok_REAL_LIT (276) 48
tok_STR_LIT (277) 49
tok_ID (278) 18 19 20 31 46
NEGATE (279)
POSITE (280)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
start (38)
    on left: 1, on right: 0
block (39)
    on left: 2, on right: 1 23 25 27 31
itemStarList (40)
    on left: 3 4, on right: 2
semicolonOpt (41)
    on left: 5 6, on right: 4
itemPlusList (42)
    on left: 7 8, on right: 4 8
item (43)
    on left: 9 10 11 12 13 14 15 16 17, on right: 7 8
declaration (44)
    on left: 18 19 20, on right: 9
initOpt (45)
    on left: 21 22, on right: 18 19 20
ifStmt (46)
    on left: 23, on right: 10
elseOpt (47)
    on left: 24 25, on right: 23
readStmt (48)
    on left: 26, on right: 11
whileStmt (49)
    on left: 27, on right: 12
writeStmt (50)
    on left: 28, on right: 13
breakStmt (51)
    on left: 29, on right: 15
continueStmt (52)
    on left: 30, on right: 16
forStmt (53)
    on left: 31, on right: 17
stepOpt (54)
    on left: 32 33, on right: 31
toDownto (55)
    on left: 34 35, on right: 31
expr (56)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50, on right:
    14 22 23 27 31 33 36 37 38 39 40 41 42 43 44 45 50 51 52
exprList (57)
    on left: 51 52, on right: 26 28 52
epsilon (58)
    on left: 53, on right: 3 6 21 24 32


State 0

    0 $accept: . start $end
    1 start: . block
    2 block: . '{' itemStarList '}'

    '{'  shift, and go to state 1

    start  go to state 2
    block  go to state 3


State 1

    2 block: '{' . itemStarList '}'
    3 itemStarList: . epsilon
    4             | . itemPlusList semicolonOpt
    7 itemPlusList: . item
    8             | . itemPlusList ';' item
    9 item: . declaration
   10     | . ifStmt
   11     | . readStmt
   12     | . whileStmt
   13     | . writeStmt
   14     | . expr
   15     | . breakStmt
   16     | . continueStmt
   17     | . forStmt
   18 declaration: . tok_INTEGER tok_ID initOpt
   19            | . tok_REAL tok_ID initOpt
   20            | . tok_STRING tok_ID initOpt
   23 ifStmt: . tok_IF expr block elseOpt
   26 readStmt: . tok_READ exprList
   27 whileStmt: . tok_WHILE expr block
   28 writeStmt: . tok_WRITE exprList
   29 breakStmt: . tok_BREAK
   30 continueStmt: . tok_CONTINUE
   31 forStmt: . tok_FOR tok_ID tok_ASSIGN expr toDownto expr stepOpt block
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'
   53 epsilon: . %empty  ['}']

    tok_BREAK     shift, and go to state 4
    tok_CONTINUE  shift, and go to state 5
    tok_FOR       shift, and go to state 6
    tok_IF        shift, and go to state 7
    tok_INTEGER   shift, and go to state 8
    tok_REAL      shift, and go to state 9
    tok_READ      shift, and go to state 10
    tok_STRING    shift, and go to state 11
    tok_WHILE     shift, and go to state 12
    tok_WRITE     shift, and go to state 13
    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    $default  reduce using rule 53 (epsilon)

    itemStarList  go to state 21
    itemPlusList  go to state 22
    item          go to state 23
    declaration   go to state 24
    ifStmt        go to state 25
    readStmt      go to state 26
    whileStmt     go to state 27
    writeStmt     go to state 28
    breakStmt     go to state 29
    continueStmt  go to state 30
    forStmt       go to state 31
    expr          go to state 32
    epsilon       go to state 33


State 2

    0 $accept: start . $end

    $end  shift, and go to state 34


State 3

    1 start: block .

    $default  reduce using rule 1 (start)


State 4

   29 breakStmt: tok_BREAK .

    $default  reduce using rule 29 (breakStmt)


State 5

   30 continueStmt: tok_CONTINUE .

    $default  reduce using rule 30 (continueStmt)


State 6

   31 forStmt: tok_FOR . tok_ID tok_ASSIGN expr toDownto expr stepOpt block

    tok_ID  shift, and go to state 35


State 7

   23 ifStmt: tok_IF . expr block elseOpt
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 36


State 8

   18 declaration: tok_INTEGER . tok_ID initOpt

    tok_ID  shift, and go to state 37


State 9

   19 declaration: tok_REAL . tok_ID initOpt

    tok_ID  shift, and go to state 38


State 10

   26 readStmt: tok_READ . exprList
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'
   51 exprList: . expr
   52         | . exprList ',' expr

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr      go to state 39
    exprList  go to state 40


State 11

   20 declaration: tok_STRING . tok_ID initOpt

    tok_ID  shift, and go to state 41


State 12

   27 whileStmt: tok_WHILE . expr block
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 42


State 13

   28 writeStmt: tok_WRITE . exprList
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'
   51 exprList: . expr
   52         | . exprList ',' expr

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr      go to state 39
    exprList  go to state 43


State 14

   47 expr: tok_INT_LIT .

    $default  reduce using rule 47 (expr)


State 15

   48 expr: tok_REAL_LIT .

    $default  reduce using rule 48 (expr)


State 16

   49 expr: tok_STR_LIT .

    $default  reduce using rule 49 (expr)


State 17

   46 expr: tok_ID .

    $default  reduce using rule 46 (expr)


State 18

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   44     | '-' . expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 44


State 19

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   45     | '+' . expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 45


State 20

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'
   50     | '(' . expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 46


State 21

    2 block: '{' itemStarList . '}'

    '}'  shift, and go to state 47


State 22

    4 itemStarList: itemPlusList . semicolonOpt
    5 semicolonOpt: . ';'
    6             | . epsilon
    8 itemPlusList: itemPlusList . ';' item
   53 epsilon: . %empty  ['}']

    ';'  shift, and go to state 48

    $default  reduce using rule 53 (epsilon)

    semicolonOpt  go to state 49
    epsilon       go to state 50


State 23

    7 itemPlusList: item .

    $default  reduce using rule 7 (itemPlusList)


State 24

    9 item: declaration .

    $default  reduce using rule 9 (item)


State 25

   10 item: ifStmt .

    $default  reduce using rule 10 (item)


State 26

   11 item: readStmt .

    $default  reduce using rule 11 (item)


State 27

   12 item: whileStmt .

    $default  reduce using rule 12 (item)


State 28

   13 item: writeStmt .

    $default  reduce using rule 13 (item)


State 29

   15 item: breakStmt .

    $default  reduce using rule 15 (item)


State 30

   16 item: continueStmt .

    $default  reduce using rule 16 (item)


State 31

   17 item: forStmt .

    $default  reduce using rule 17 (item)


State 32

   14 item: expr .  ['}', ';']
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 14 (item)


State 33

    3 itemStarList: epsilon .

    $default  reduce using rule 3 (itemStarList)


State 34

    0 $accept: start $end .

    $default  accept


State 35

   31 forStmt: tok_FOR tok_ID . tok_ASSIGN expr toDownto expr stepOpt block

    tok_ASSIGN  shift, and go to state 59


State 36

    2 block: . '{' itemStarList '}'
   23 ifStmt: tok_IF expr . block elseOpt
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58
    '{'         shift, and go to state 1

    block  go to state 60


State 37

   18 declaration: tok_INTEGER tok_ID . initOpt
   21 initOpt: . epsilon
   22        | . tok_ASSIGN expr
   53 epsilon: . %empty  ['}', ';']

    tok_ASSIGN  shift, and go to state 61

    $default  reduce using rule 53 (epsilon)

    initOpt  go to state 62
    epsilon  go to state 63


State 38

   19 declaration: tok_REAL tok_ID . initOpt
   21 initOpt: . epsilon
   22        | . tok_ASSIGN expr
   53 epsilon: . %empty  ['}', ';']

    tok_ASSIGN  shift, and go to state 61

    $default  reduce using rule 53 (epsilon)

    initOpt  go to state 64
    epsilon  go to state 63


State 39

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   51 exprList: expr .  ['}', ';', ',']

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 51 (exprList)


State 40

   26 readStmt: tok_READ exprList .  ['}', ';']
   52 exprList: exprList . ',' expr

    ','  shift, and go to state 65

    $default  reduce using rule 26 (readStmt)


State 41

   20 declaration: tok_STRING tok_ID . initOpt
   21 initOpt: . epsilon
   22        | . tok_ASSIGN expr
   53 epsilon: . %empty  ['}', ';']

    tok_ASSIGN  shift, and go to state 61

    $default  reduce using rule 53 (epsilon)

    initOpt  go to state 66
    epsilon  go to state 63


State 42

    2 block: . '{' itemStarList '}'
   27 whileStmt: tok_WHILE expr . block
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58
    '{'         shift, and go to state 1

    block  go to state 67


State 43

   28 writeStmt: tok_WRITE exprList .  ['}', ';']
   52 exprList: exprList . ',' expr

    ','  shift, and go to state 65

    $default  reduce using rule 28 (writeStmt)


State 44

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   44     | '-' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '/', '*', '^', '{', '}', ';', ')', ',']

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < NEGATE).
    Conflict between rule 44 and token tok_EQ resolved as reduce (tok_EQ < NEGATE).
    Conflict between rule 44 and token tok_NE resolved as reduce (tok_NE < NEGATE).
    Conflict between rule 44 and token '-' resolved as reduce ('-' < NEGATE).
    Conflict between rule 44 and token '+' resolved as reduce ('+' < NEGATE).
    Conflict between rule 44 and token '/' resolved as reduce ('/' < NEGATE).
    Conflict between rule 44 and token '*' resolved as reduce ('*' < NEGATE).
    Conflict between rule 44 and token '^' resolved as reduce ('^' < NEGATE).


State 45

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   45     | '+' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '/', '*', '^', '{', '}', ';', ')', ',']

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < POSITE).
    Conflict between rule 45 and token tok_EQ resolved as reduce (tok_EQ < POSITE).
    Conflict between rule 45 and token tok_NE resolved as reduce (tok_NE < POSITE).
    Conflict between rule 45 and token '-' resolved as reduce ('-' < POSITE).
    Conflict between rule 45 and token '+' resolved as reduce ('+' < POSITE).
    Conflict between rule 45 and token '/' resolved as reduce ('/' < POSITE).
    Conflict between rule 45 and token '*' resolved as reduce ('*' < POSITE).
    Conflict between rule 45 and token '^' resolved as reduce ('^' < POSITE).


State 46

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   50     | '(' expr . ')'

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58
    ')'         shift, and go to state 68


State 47

    2 block: '{' itemStarList '}' .

    $default  reduce using rule 2 (block)


State 48

    5 semicolonOpt: ';' .  ['}']
    8 itemPlusList: itemPlusList ';' . item
    9 item: . declaration
   10     | . ifStmt
   11     | . readStmt
   12     | . whileStmt
   13     | . writeStmt
   14     | . expr
   15     | . breakStmt
   16     | . continueStmt
   17     | . forStmt
   18 declaration: . tok_INTEGER tok_ID initOpt
   19            | . tok_REAL tok_ID initOpt
   20            | . tok_STRING tok_ID initOpt
   23 ifStmt: . tok_IF expr block elseOpt
   26 readStmt: . tok_READ exprList
   27 whileStmt: . tok_WHILE expr block
   28 writeStmt: . tok_WRITE exprList
   29 breakStmt: . tok_BREAK
   30 continueStmt: . tok_CONTINUE
   31 forStmt: . tok_FOR tok_ID tok_ASSIGN expr toDownto expr stepOpt block
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_BREAK     shift, and go to state 4
    tok_CONTINUE  shift, and go to state 5
    tok_FOR       shift, and go to state 6
    tok_IF        shift, and go to state 7
    tok_INTEGER   shift, and go to state 8
    tok_REAL      shift, and go to state 9
    tok_READ      shift, and go to state 10
    tok_STRING    shift, and go to state 11
    tok_WHILE     shift, and go to state 12
    tok_WRITE     shift, and go to state 13
    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    $default  reduce using rule 5 (semicolonOpt)

    item          go to state 69
    declaration   go to state 24
    ifStmt        go to state 25
    readStmt      go to state 26
    whileStmt     go to state 27
    writeStmt     go to state 28
    breakStmt     go to state 29
    continueStmt  go to state 30
    forStmt       go to state 31
    expr          go to state 32


State 49

    4 itemStarList: itemPlusList semicolonOpt .

    $default  reduce using rule 4 (itemStarList)


State 50

    6 semicolonOpt: epsilon .

    $default  reduce using rule 6 (semicolonOpt)


State 51

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   41     | expr tok_ASSIGN . expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 70


State 52

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   42     | expr tok_EQ . expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 71


State 53

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   43     | expr tok_NE . expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 72


State 54

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   40     | expr '-' . expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 73


State 55

   36 expr: . expr '+' expr
   36     | expr '+' . expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 74


State 56

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   37     | expr '/' . expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 75


State 57

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   39     | expr '*' . expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 76


State 58

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   38     | expr '^' . expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 77


State 59

   31 forStmt: tok_FOR tok_ID tok_ASSIGN . expr toDownto expr stepOpt block
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 78


State 60

   23 ifStmt: tok_IF expr block . elseOpt
   24 elseOpt: . epsilon
   25        | . tok_ELSE block
   53 epsilon: . %empty  ['}', ';']

    tok_ELSE  shift, and go to state 79

    $default  reduce using rule 53 (epsilon)

    elseOpt  go to state 80
    epsilon  go to state 81


State 61

   22 initOpt: tok_ASSIGN . expr
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 82


State 62

   18 declaration: tok_INTEGER tok_ID initOpt .

    $default  reduce using rule 18 (declaration)


State 63

   21 initOpt: epsilon .

    $default  reduce using rule 21 (initOpt)


State 64

   19 declaration: tok_REAL tok_ID initOpt .

    $default  reduce using rule 19 (declaration)


State 65

   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'
   52 exprList: exprList ',' . expr

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 83


State 66

   20 declaration: tok_STRING tok_ID initOpt .

    $default  reduce using rule 20 (declaration)


State 67

   27 whileStmt: tok_WHILE expr block .

    $default  reduce using rule 27 (whileStmt)


State 68

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 69

    8 itemPlusList: itemPlusList ';' item .

    $default  reduce using rule 8 (itemPlusList)


State 70

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   41     | expr tok_ASSIGN expr .  [tok_BY, tok_DOWNTO, tok_TO, '{', '}', ';', ')', ',']
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token tok_ASSIGN resolved as shift (%right tok_ASSIGN).
    Conflict between rule 41 and token tok_EQ resolved as shift (tok_ASSIGN < tok_EQ).
    Conflict between rule 41 and token tok_NE resolved as shift (tok_ASSIGN < tok_NE).
    Conflict between rule 41 and token '-' resolved as shift (tok_ASSIGN < '-').
    Conflict between rule 41 and token '+' resolved as shift (tok_ASSIGN < '+').
    Conflict between rule 41 and token '/' resolved as shift (tok_ASSIGN < '/').
    Conflict between rule 41 and token '*' resolved as shift (tok_ASSIGN < '*').
    Conflict between rule 41 and token '^' resolved as shift (tok_ASSIGN < '^').


State 71

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   42     | expr tok_EQ expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_TO, '{', '}', ';', ')', ',']
   43     | expr . tok_NE expr

    '-'  shift, and go to state 54
    '+'  shift, and go to state 55
    '/'  shift, and go to state 56
    '*'  shift, and go to state 57
    '^'  shift, and go to state 58

    tok_EQ  error (nonassociative)
    tok_NE  error (nonassociative)

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < tok_EQ).
    Conflict between rule 42 and token tok_EQ resolved as an error (%nonassoc tok_EQ).
    Conflict between rule 42 and token tok_NE resolved as an error (%nonassoc tok_NE).
    Conflict between rule 42 and token '-' resolved as shift (tok_EQ < '-').
    Conflict between rule 42 and token '+' resolved as shift (tok_EQ < '+').
    Conflict between rule 42 and token '/' resolved as shift (tok_EQ < '/').
    Conflict between rule 42 and token '*' resolved as shift (tok_EQ < '*').
    Conflict between rule 42 and token '^' resolved as shift (tok_EQ < '^').


State 72

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   43     | expr tok_NE expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_TO, '{', '}', ';', ')', ',']

    '-'  shift, and go to state 54
    '+'  shift, and go to state 55
    '/'  shift, and go to state 56
    '*'  shift, and go to state 57
    '^'  shift, and go to state 58

    tok_EQ  error (nonassociative)
    tok_NE  error (nonassociative)

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < tok_NE).
    Conflict between rule 43 and token tok_EQ resolved as an error (%nonassoc tok_EQ).
    Conflict between rule 43 and token tok_NE resolved as an error (%nonassoc tok_NE).
    Conflict between rule 43 and token '-' resolved as shift (tok_NE < '-').
    Conflict between rule 43 and token '+' resolved as shift (tok_NE < '+').
    Conflict between rule 43 and token '/' resolved as shift (tok_NE < '/').
    Conflict between rule 43 and token '*' resolved as shift (tok_NE < '*').
    Conflict between rule 43 and token '^' resolved as shift (tok_NE < '^').


State 73

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   40     | expr '-' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '{', '}', ';', ')', ',']
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    '/'  shift, and go to state 56
    '*'  shift, and go to state 57
    '^'  shift, and go to state 58

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < '-').
    Conflict between rule 40 and token tok_EQ resolved as reduce (tok_EQ < '-').
    Conflict between rule 40 and token tok_NE resolved as reduce (tok_NE < '-').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 40 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 40 and token '^' resolved as shift ('-' < '^').


State 74

   36 expr: expr . '+' expr
   36     | expr '+' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '{', '}', ';', ')', ',']
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    '/'  shift, and go to state 56
    '*'  shift, and go to state 57
    '^'  shift, and go to state 58

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < '+').
    Conflict between rule 36 and token tok_EQ resolved as reduce (tok_EQ < '+').
    Conflict between rule 36 and token tok_NE resolved as reduce (tok_NE < '+').
    Conflict between rule 36 and token '-' resolved as reduce (%left '-').
    Conflict between rule 36 and token '+' resolved as reduce (%left '+').
    Conflict between rule 36 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 36 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 36 and token '^' resolved as shift ('+' < '^').


State 75

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   37     | expr '/' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '/', '*', '{', '}', ';', ')', ',']
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    '^'  shift, and go to state 58

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < '/').
    Conflict between rule 37 and token tok_EQ resolved as reduce (tok_EQ < '/').
    Conflict between rule 37 and token tok_NE resolved as reduce (tok_NE < '/').
    Conflict between rule 37 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 37 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 37 and token '/' resolved as reduce (%left '/').
    Conflict between rule 37 and token '*' resolved as reduce (%left '*').
    Conflict between rule 37 and token '^' resolved as shift ('/' < '^').


State 76

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   39     | expr '*' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '/', '*', '{', '}', ';', ')', ',']
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    '^'  shift, and go to state 58

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < '*').
    Conflict between rule 39 and token tok_EQ resolved as reduce (tok_EQ < '*').
    Conflict between rule 39 and token tok_NE resolved as reduce (tok_NE < '*').
    Conflict between rule 39 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 39 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 39 and token '/' resolved as reduce (%left '/').
    Conflict between rule 39 and token '*' resolved as reduce (%left '*').
    Conflict between rule 39 and token '^' resolved as shift ('*' < '^').


State 77

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   38     | expr '^' expr .  [tok_ASSIGN, tok_BY, tok_DOWNTO, tok_EQ, tok_NE, tok_TO, '-', '+', '/', '*', '{', '}', ';', ')', ',']
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    '^'  shift, and go to state 58

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token tok_ASSIGN resolved as reduce (tok_ASSIGN < '^').
    Conflict between rule 38 and token tok_EQ resolved as reduce (tok_EQ < '^').
    Conflict between rule 38 and token tok_NE resolved as reduce (tok_NE < '^').
    Conflict between rule 38 and token '-' resolved as reduce ('-' < '^').
    Conflict between rule 38 and token '+' resolved as reduce ('+' < '^').
    Conflict between rule 38 and token '/' resolved as reduce ('/' < '^').
    Conflict between rule 38 and token '*' resolved as reduce ('*' < '^').
    Conflict between rule 38 and token '^' resolved as shift (%right '^').


State 78

   31 forStmt: tok_FOR tok_ID tok_ASSIGN expr . toDownto expr stepOpt block
   34 toDownto: . tok_TO
   35         | . tok_DOWNTO
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_DOWNTO  shift, and go to state 84
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    tok_TO      shift, and go to state 85
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    toDownto  go to state 86


State 79

    2 block: . '{' itemStarList '}'
   25 elseOpt: tok_ELSE . block

    '{'  shift, and go to state 1

    block  go to state 87


State 80

   23 ifStmt: tok_IF expr block elseOpt .

    $default  reduce using rule 23 (ifStmt)


State 81

   24 elseOpt: epsilon .

    $default  reduce using rule 24 (elseOpt)


State 82

   22 initOpt: tok_ASSIGN expr .  ['}', ';']
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 22 (initOpt)


State 83

   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   52 exprList: exprList ',' expr .  ['}', ';', ',']

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 52 (exprList)


State 84

   35 toDownto: tok_DOWNTO .

    $default  reduce using rule 35 (toDownto)


State 85

   34 toDownto: tok_TO .

    $default  reduce using rule 34 (toDownto)


State 86

   31 forStmt: tok_FOR tok_ID tok_ASSIGN expr toDownto . expr stepOpt block
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 88


State 87

   25 elseOpt: tok_ELSE block .

    $default  reduce using rule 25 (elseOpt)


State 88

   31 forStmt: tok_FOR tok_ID tok_ASSIGN expr toDownto expr . stepOpt block
   32 stepOpt: . epsilon
   33        | . tok_BY expr
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr
   53 epsilon: . %empty  ['{']

    tok_ASSIGN  shift, and go to state 51
    tok_BY      shift, and go to state 89
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 53 (epsilon)

    stepOpt  go to state 90
    epsilon  go to state 91


State 89

   33 stepOpt: tok_BY . expr
   36 expr: . expr '+' expr
   37     | . expr '/' expr
   38     | . expr '^' expr
   39     | . expr '*' expr
   40     | . expr '-' expr
   41     | . expr tok_ASSIGN expr
   42     | . expr tok_EQ expr
   43     | . expr tok_NE expr
   44     | . '-' expr
   45     | . '+' expr
   46     | . tok_ID
   47     | . tok_INT_LIT
   48     | . tok_REAL_LIT
   49     | . tok_STR_LIT
   50     | . '(' expr ')'

    tok_INT_LIT   shift, and go to state 14
    tok_REAL_LIT  shift, and go to state 15
    tok_STR_LIT   shift, and go to state 16
    tok_ID        shift, and go to state 17
    '-'           shift, and go to state 18
    '+'           shift, and go to state 19
    '('           shift, and go to state 20

    expr  go to state 92


State 90

    2 block: . '{' itemStarList '}'
   31 forStmt: tok_FOR tok_ID tok_ASSIGN expr toDownto expr stepOpt . block

    '{'  shift, and go to state 1

    block  go to state 93


State 91

   32 stepOpt: epsilon .

    $default  reduce using rule 32 (stepOpt)


State 92

   33 stepOpt: tok_BY expr .  ['{']
   36 expr: expr . '+' expr
   37     | expr . '/' expr
   38     | expr . '^' expr
   39     | expr . '*' expr
   40     | expr . '-' expr
   41     | expr . tok_ASSIGN expr
   42     | expr . tok_EQ expr
   43     | expr . tok_NE expr

    tok_ASSIGN  shift, and go to state 51
    tok_EQ      shift, and go to state 52
    tok_NE      shift, and go to state 53
    '-'         shift, and go to state 54
    '+'         shift, and go to state 55
    '/'         shift, and go to state 56
    '*'         shift, and go to state 57
    '^'         shift, and go to state 58

    $default  reduce using rule 33 (stepOpt)


State 93

   31 forStmt: tok_FOR tok_ID tok_ASSIGN expr toDownto expr stepOpt block .

    $default  reduce using rule 31 (forStmt)
